#알파벳 소문자로만 이루어진 단어 S가 주어진다. 
#각각의 알파벳에 대해서, 단어에 포함되어 있는 경우에는 처음 등장하는 위치를, 
# 포함되어 있지 않은 경우에는 -1을 출력하는 프로그램을 작성하시오.
#첫째 줄에 단어 S가 주어진다. 단어의 길이는 100을 넘지 않으며, 알파벳 소문자로만 이루어져 있다.
#각각의 알파벳에 대해서, a가 처음 등장하는 위치, b가 처음 등장하는 위치, ... z가 처음 등장하는 위치를 공백으로 구분해서 출력한다.
#만약, 어떤 알파벳이 단어에 포함되어 있지 않다면 -1을 출력한다. 단어의 첫 번째 글자는 0번째 위치이고, 두 번째 글자는 1번째 위치이다.

# s = input()
# al = []
# for i in range(0,27):
#     al.append(-1)

# for j in range(0,len(s)+1):
#     a = s[j]

# (1) alphabet 리스트에 97~122까지 저장한다. 97~122는 아스키값으로 a~z까지임
# (2) x는 97~122이고, chr() 사용해서 character로 변환
# (3) find()는 입력값 word에 x의 char값이 있는지 검사, 없으면 -1 반환, 있으면 그 값이 있는 인덱스 반환, 값이 여러개라면 가장 먼저 나온 인덱스 반환
word = input()
alphabet = list(range(97,123))

for x in alphabet :
    print(word.find(chr(x))) 